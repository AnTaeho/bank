name: DEV) Push Docker Image And Deploy to EC2

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Set up yml ec2 dev file
        env:
          YAML_SECRET: ${{ secrets.YAML_EC2_DEV }}
          YAML_DIR: src/main/resources
          YAML_FILE_NAME: application-ec2-dev.yml
        run: |
          echo $YAML_SECRET | base64 --decode > $YAML_DIR/$YAML_FILE_NAME
          echo "YAML_SECRET has been decoded and saved to $YAML_DIR/$YAML_FILE_NAME"

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Get Short SHA
        id: short_sha
        run: |
          echo "::set-output name=sha_short::$(echo ${{ github.sha }} | head -c 7)"
          echo "Short SHA: ${{ steps.short_sha.outputs.sha_short }}"

      - name: Print branch & tag information
        run: |
          echo "Current branch: ${{ github.event.inputs.branch || github.ref }}"
          echo "Current tag: ${{ steps.short_sha.outputs.sha_short }}"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Docker Image Build
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/bank:${{ steps.short_sha.outputs.sha_short }}

      - name: DockerHub Push
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/bank:${{ steps.short_sha.outputs.sha_short }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_PEM_KEY }}

          script: |
            sudo docker kill bank:${{ steps.short_sha.outputs.sha_short }}
            sudo docker rm -f bank:${{ steps.short_sha.outputs.sha_short }}
            sudo docker rmi ${{ secrets.DOCKER_HUB_USERNAME }}/bank:${{ steps.short_sha.outputs.sha_short }}
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/bank:${{ steps.short_sha.outputs.sha_short }}
            
            sudo docker run -p ${{ secrets.PORT }}:${{ secrets.PORT }} \
            --name bank:${{ steps.short_sha.outputs.sha_short }} \
            -e SPRING_DATASOURCE_URL=${{ secrets.DB_URL }} \
            -e SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }} \
            -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -d ${{ secrets.DOCKER_HUB_USERNAME }}/bank:${{ steps.short_sha.outputs.sha_short }}
